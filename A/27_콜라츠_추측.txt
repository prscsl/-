# 27번 문제
## 콜라츠 추측

## 문제 설명
1937년 Collatz란 사람에 의해 제기된 이 추측은, 
주어진 수가 1이 될 때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다.
작업은 다음과 같습니다.

1-1. 입력된 수가 짝수라면 2로 나눕니다. 
1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다. 
2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다. 
예를 들어, 주어진 수가 6이라면 6 → 3 → 10 → 5 → 16 → 8 → 4 → 2 → 1 이 되어
 총 8번 만에 1이 됩니다. 위 작업을 몇 번이나 반복해야 하는지 반환하는 함수, 
solution을 완성해 주세요. 단, 주어진 수가 1인 경우에는 0을, 
작업을 500번 반복할 때까지 1이 되지 않는다면 –1을 반환해 주세요.

## 제한 사항
입력된 수, num은 1 이상 8,000,000 미만인 정수입니다.

## 입출력 예
   n	result
   6	  8
  16	  4
626331   -1

## 코드

 class Solution {
    public int solution(int num) {
        long number = num;
        int answer = 0;
        for(answer = 0; answer < 500; answer++){
            if(number == 1) return answer;
            else{
                if(number % 2 == 0) number /= 2;
                else number = number * 3 + 1;
            }
        } 
        return -1;
    }
}

## 풀이 
먼저 터지지 않도록 long으로 바꿔준다.
폴문 조건을 i가 아닌 answer을 대입해서 반복시켜준다.
if문으로 조건을 넣어주면 끝