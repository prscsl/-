# @14번 문제
## 나누어 떨어지는 숫자 배열
array의 각 element 중 divisor로 나누어 떨어지는 값을 오름차순으로 
정렬한 배열을 반환하는 함수, solution을 작성해주세요.
divisor로 나누어 떨어지는 element가 하나도 없다면 배열에 -1을 담아 반환하세요.



## 제한사항
- arr은 자연수를 담은 배열입니다.
- 정수 i, j에 대해 i ≠ j 이면 arr[i] ≠ arr[j] 입니다.
- divisor는 자연수입니다.
- array는 길이 1 이상인 배열입니다.

## 입출력 예
arr	         divisor	return
[5, 9, 7, 10]	5	[5, 10]
[2, 36, 1, 3]	1	[1, 2, 3, 36]
[3,2,6]	           10	[-1]

## 코드
class Solution {
    public int[] solution(int[] arr, int divisor) {
        
        int cnt = 0;
        for(int i = 0; i < arr.length; i++){
            if(arr[i] % divisor == 0) cnt++;
        }

        if(cnt == 0) {
            int[] answer = {-1};
            return answer;
        } 
        
        int[] answer = new int[cnt];
        
        for(int i = 0, j = 0; i < arr.length; i++){
            if(arr[i] % divisor == 0) answer[j++] = arr[i]; 
        }
        
       for(int i = 0; i < cnt - 1; i++){
            for(int j = 0; j < cnt - 1 - i; j++){
                if(answer[j] > answer[j +1]){
                    int temp = answer[j];
                    answer[j] = answer[j+1];
                    answer[j+1] = temp;
                }
            }
        }
        
        return answer;
    }
}

### 2번 
 return Arrays.stream(array).filter(factor -> factor % divisor == 0).toArray();}

## 풀이
배열 길이를 구하고 나누어 떨어지는 값이 없으면 배열값 -1 반환
구한 배열길이 만큼 배열을 선언하고 나누어 떨어지는 값은 배열에 저장하고
정렬한다.
2번 코드는 그저 아름답기만 하다...