# 32
## 문자열 내 마음대로 정렬하기

## 문자열로 구성된 리스트 strings와, 정수 n이 주어졌을 때, 
각 문자열의 인덱스 n번째 글자를 기준으로 오름차순 정렬하려 합니다. 
예를 들어 strings가 ["sun", "bed", "car"]이고 n이 1이면 
각 단어의 인덱스 1의 문자 "u", "e", "a"로 strings를 정렬합니다.

## 제한 조건
strings는 길이 1 이상, 50이하인 배열입니다.
strings의 원소는 소문자 알파벳으로 이루어져 있습니다.
strings의 원소는 길이 1 이상, 100이하인 문자열입니다.
모든 strings의 원소의 길이는 n보다 큽니다.
인덱스 1의 문자가 같은 문자열이 여럿 일 경우, 사전순으로 앞선 문자열이 앞쪽에 위치합니다.

## 입출력 예
strings	n	return
["sun", "bed", "car"]	1	["car", "bed", "sun"]
["abce", "abcd", "cdx"]	2	["abcd", "abce", "cdx"]

## 코드

import java.util.Arrays;

class Solution {
    public String[] solution(String[] strings, int n) {
        String a = "";
        String [] b = new String[strings.length]; //정렬한 값 넣어줄 배열 
   				         // 나중 확인결과 굳이 만들필요없었다.

        for(int i =0; i<strings.length;i++){
            a = strings[i].substring(n,n+1);
            a += strings[i];
            strings[i] = a;
        } // 반복문을 통해 n의 해당하는 글자를 앞으로 빼고 더해줌

        Arrays.sort(strings); // 배열 오름차순으로 맞춤

        for(int i =0; i<strings.length; i++){
            b[i] = strings[i].substring(1); 
        } // substring을 통해 앞글자를 떼고 b의 그대로 넣어줌 

        return b;
    }
}

## 여담
어느정도 풀어서 그런지 막힘없이 풀렸다.
발을 내딛 느낌이 들어서 설렐 수 밖에 없었다.
나중에 확인해보니 b를 만들필요없이
strings에 바로 넣어줄 수 있었다.



