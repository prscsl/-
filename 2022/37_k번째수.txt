# 37.k번째수
## 문제 설명
배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.

예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면

array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.
1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.
2에서 나온 배열의 3번째 숫자는 5입니다.
배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, 
commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 
나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요.

## 제한사항
array의 길이는 1 이상 100 이하입니다.
array의 각 원소는 1 이상 100 이하입니다.
commands의 길이는 1 이상 50 이하입니다.
commands의 각 원소는 길이가 3입니다.

## 입출력 예
       array	           commands	    return
[1, 5, 2, 6, 3, 7, 4]  / [[2, 5, 3], [4, 4, 1], [1, 7, 3]] / [5, 6, 3]

## 코드
```
import java.util.*;
class Solution {
    public int[] solution(int[] array, int[][] commands) {
	
	//결과값 넣을 배열, 중간배열, 중간에 사용할 int변수 설정
        int[] answer = new int[commands.length];
        int[] result = {}; 
        int i=0, j=0, k=0;
	
	// for문을 통해 commands[a][0]부터 2까지 각각 i,j,k에 넣어주고 
	이중폴문으로 중간배열에 값을 넣어주는데 맞는  위치에서 뽑기위해 i,j-1씩 해준다.
	중간배열에 넣어주는 위치를 위해 c변수를 따로 만들었다.
        for(int a=0; a< commands.length ; a++){

             i= commands[a][0]; 
             j= commands[a][1]; 
             k= commands[a][2]; 
             int c=0;

            result = new int[j-i+1];  

            for(int b=i-1; b <=j-1 ; b++){  

               result[c] = array[b]; 
               c++;

            }
	//배열 정렬
            Arrays.sort(result);
	//answer에 넣어주면 끝
            answer[a] = result[k-1];
        }

       return answer;
    }
}
```

## 여담
계속 식을 넣어 코드실행을 해도 오류가 나서 왜그러나했더니, 오늘 자동로그인이 안되어 있어서
새로 로그인했더니 기본 설정이 C++로 가있어서 그랬다. 다음부터는 꼭 확인하자... 이것만아니었어도 20분은
아꼈다.